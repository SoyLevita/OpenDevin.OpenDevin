services:
  # Este es el servicio principal que corre la interfaz y el backend de OpenDevin
  - type: web
    name: opendevin-agent
    env: docker
    # Usa el plan gratuito de Render. ¡Importante!
    plan: free
    # Le dice a Render que construya desde el Dockerfile en el repo
    dockerfilePath: ./Dockerfile
    # Variables de entorno para configurar el agente
    envVars:
      # Le decimos a OpenDevin que escuche en todas las interfaces, necesario para Render
      - key: HOST
        value: 0.0.0.0
      # El puerto que Render espera que usemos
      - key: PORT
        value: 3001
      # El modelo de lenguaje que vamos a usar
      - key: LLM_MODEL
        value: gemini/gemini-1.5-flash-latest
      # El URL base para la API de Gemini
      - key: LLM_BASE_URL
        value: https://generativelanguage.googleapis.com/v1beta
      # Acá vamos a poner nuestra API Key de forma segura
      - key: LLM_API_KEY
        # Le decimos a Render que esta variable viene de un "Secret"
        fromSecret: true
      # Directorio de trabajo del agente
      - key: WORKSPACE_BASE
        value: /app/opendevin/workdir
      # Desactivamos el modo sandbox por simplicidad en Render
      - key: SANDBOX_TYPE
        value: exec

# Esta sección es para definir el Secret que vamos a usar
# Es la forma correcta de decirle a Render de dónde sacar la clave
secrets:
  - key: LLM_API_KEY
    # El nombre que le vamos a dar al grupo de secrets en la UI de Render
    # Esto es opcional pero ayuda a organizar
    group: GeminiCredentials
